## For H2 database

spring.h2.console.enabled=true
spring.h2.console.path=/h2

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=none

#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.sql.init.schema-locations=classpath*:h2/drop-create-schema.sql
spring.sql.init.data-locations=classpath*:h2/insert-data.sql

#-------------------------------------------------------------------------------------------------------------------#

## For PostgreSQL database

#spring.datasource.url=jdbc:postgresql://localhost:5433/postgres
#spring.datasource.username=postgres
#spring.datasource.password=password
#
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL10Dialect
#
###creates and drop table using annotations "@Table(name=".....") from entity class
##spring.jpa.hibernate.ddl-auto=create-drop
#
###this command always creates table and insert "data" to them using SQL file
#spring.sql.init.mode=always
### below commands show path of SQL file to be executed
#spring.sql.init.schema-locations=classpath*:postgres/drop-create-schema.sql
#spring.sql.init.data-locations=classpath*:postgres/insert-data.sql
#
##spring.jpa.show-sql=true
##spring.jpa.properties.hibernate.format_sql=true


